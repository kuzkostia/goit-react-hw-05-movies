{"version":3,"file":"static/js/755.c6f3b57e.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.module.jsx","components/FilmList/FilmList.jsx","components/Form/Form.module.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/getMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  margin-top: 12px;\n`;\nexport const ItemFilms = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport { ListFilms, ItemFilms } from './FilmList.module';\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListFilms>\n      {movies.map(({ id, original_title }) => (\n        <ItemFilms key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </ItemFilms>\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmsList;\n","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { InputSearch, ButtonSearch } from './Form.module';\nimport { useLocation } from 'react-router-dom';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const queryParam = searchParams.get('query');\n    setQuery(queryParam || '');\n  }, [location]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMovies';\n\nimport Form from 'components/Form/Form';\nimport FilmsList from '../../components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3eaf714ba46452aa51eb9c943eecadbc'; \n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\n\n\n\n\n"],"names":["ListFilms","styled","ItemFilms","movies","location","useLocation","map","id","original_title","state","from","to","InputSearch","ButtonSearch","setSearchParams","useState","query","setQuery","useEffect","queryParam","URLSearchParams","search","get","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","currentQuery","fetchMovieByQuery","getMovieByQuery","movieByQuery","console","log","length","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}