{"version":3,"file":"static/js/891.549b6b9a.chunk.js","mappings":"+SAGaA,EAAgBC,EAAAA,EAAAA,QAAH,uEAKbC,EAAeD,EAAAA,EAAAA,GAAH,2JASZE,EAAOF,EAAAA,EAAAA,GAAH,gEAKJG,EAAWH,EAAAA,EAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,iO,4ECzBVM,EAAmB,WAC9B,OAEE,UAAC,KAAD,YACE,SAAC,KAAD,CAAKC,MAAM,QACX,SAAC,KAAD,CAAKA,MAAM,SACX,SAAC,KAAD,CAAKA,MAAM,UAGhB,C,qKCTYC,EAAeR,EAAAA,EAAAA,OAAH,0GAMZS,GAAgBT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,0UAqBbW,EAAcX,EAAAA,EAAAA,IAAH,gHAOXY,EAAMZ,EAAAA,EAAAA,IAAH,+NAQK,qBAAGO,KAAH,G,+IClBrB,EAlBkB,SAAC,GAAwB,IAAtBM,EAAqB,EAArBA,eACnB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,8BAEA,SAAC,KAAD,UACGA,EAAeC,KAAI,SAAAC,GAAa,OAC/B,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAcE,IAAzC,SACGF,EAAcG,SAFJH,EAAcE,GADE,QAUxC,E,SCmBD,EAvCa,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAON,EAAP,KAAuBO,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAkBQ,GALM,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,8BAEGL,GACC,SAAC,IAAD,IACEE,GACF,mGAIA,SAAC,EAAD,CAAWV,eAAgBA,KAIlC,C,+LCxCKgB,EAAU,6BACVC,EAAU,mCAEHH,EAAgB,mCAAG,sGACPI,EAAAA,EAAAA,IAAA,kEACsCD,IAF/B,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACgBC,EADhB,iCACgDI,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,oBACoBN,EADpB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,4BAC4BN,EAD5B,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,4BAC4BN,EAD5B,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/Movie.styled.js","components/SharedLayout/LoadingDots.js","components/SharedLayout/SharedLayout.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","import { LoadingDots, Dot } from './SharedLayout.styled'; // додаємо стилі\n\n// додаємо індикатор завантаження\nexport const LoadingIndicator = () => {\n  return (\n    // додаємо анімацію для індикатора завантаження\n    <LoadingDots>\n      <Dot delay=\"0s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".4s\" />\n    </LoadingDots>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledHeader = styled.header`\n  padding: 20px 30px;\n  text-align: center;\n  box-shadow: 0px 4px 4px #d3d3d3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    text-decoration: underline;\n  }\n`;\n\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #1c85ff;\n  animation: 1s infinite ease-in-out;\n  animation-delay: ${({ delay }) => delay};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './Movie.styled'; // додаємо стилі\n\nconst MovieList = ({ trendingMovies }) => {\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n\n      <List>\n        {trendingMovies.map(trendingMovie => (\n          <ListItem key={trendingMovie.id}>\n            <StyledLink to={`/movies/${trendingMovie.id}`}>\n              {trendingMovie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../services/api';\nimport MovieList from 'components/MovieList/MovieList'; // компонент для відображення списку фільмів\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; // індикатор завантаження\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // додаємо запит на трендові фільми\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results); // записуємо в стейт\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {/* додаємо перевірку на стан завантаження */}\n      {isLoading ? (\n        <LoadingIndicator />\n      ) : error ? (\n        <p>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </p>\n      ) : (\n        <MovieList trendingMovies={trendingMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '3eaf714ba46452aa51eb9c943eecadbc'; \n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","LoadingIndicator","delay","StyledHeader","StyledNavLink","NavLink","LoadingDots","Dot","trendingMovies","map","trendingMovie","to","id","title","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","baseURL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}